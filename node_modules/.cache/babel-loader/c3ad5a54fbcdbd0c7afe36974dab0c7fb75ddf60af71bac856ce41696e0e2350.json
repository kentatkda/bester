{"ast":null,"code":"import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nconst asyncHandler = handler => (event, info) => {\n  if (handler) {\n    handler(event, info);\n  }\n};\nclass PanGesture extends Feature {\n  constructor() {\n    super(...arguments);\n    this.removePointerDownListener = noop;\n  }\n  onPointerDown(pointerDownEvent) {\n    this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n      transformPagePoint: this.node.getTransformPagePoint(),\n      contextWindow: getContextWindow(this.node)\n    });\n  }\n  createPanHandlers() {\n    const {\n      onPanSessionStart,\n      onPanStart,\n      onPan,\n      onPanEnd\n    } = this.node.getProps();\n    return {\n      onSessionStart: asyncHandler(onPanSessionStart),\n      onStart: asyncHandler(onPanStart),\n      onMove: onPan,\n      onEnd: (event, info) => {\n        delete this.session;\n        if (onPanEnd) onPanEnd(event, info);\n      }\n    };\n  }\n  mount() {\n    this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", event => this.onPointerDown(event));\n  }\n  update() {\n    this.session && this.session.updateHandlers(this.createPanHandlers());\n  }\n  unmount() {\n    this.removePointerDownListener();\n    this.session && this.session.end();\n  }\n}\nexport { PanGesture };","map":{"version":3,"names":["PanSession","addPointerEvent","Feature","noop","getContextWindow","asyncHandler","handler","event","info","PanGesture","constructor","arguments","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","transformPagePoint","node","getTransformPagePoint","contextWindow","onPanSessionStart","onPanStart","onPan","onPanEnd","getProps","onSessionStart","onStart","onMove","onEnd","mount","current","update","updateHandlers","unmount","end"],"sources":["C:/Users/MEIP-users/Desktop/codes/react-ts/node_modules/framer-motion/dist/es/gestures/pan/index.mjs"],"sourcesContent":["import { PanSession } from './PanSession.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from '../../utils/noop.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\n\r\nconst asyncHandler = (handler) => (event, info) => {\r\n    if (handler) {\r\n        handler(event, info);\r\n    }\r\n};\r\nclass PanGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removePointerDownListener = noop;\r\n    }\r\n    onPointerDown(pointerDownEvent) {\r\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\r\n            transformPagePoint: this.node.getTransformPagePoint(),\r\n            contextWindow: getContextWindow(this.node),\r\n        });\r\n    }\r\n    createPanHandlers() {\r\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\r\n        return {\r\n            onSessionStart: asyncHandler(onPanSessionStart),\r\n            onStart: asyncHandler(onPanStart),\r\n            onMove: onPan,\r\n            onEnd: (event, info) => {\r\n                delete this.session;\r\n                if (onPanEnd)\r\n                    onPanEnd(event, info);\r\n            },\r\n        };\r\n    }\r\n    mount() {\r\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\r\n    }\r\n    update() {\r\n        this.session && this.session.updateHandlers(this.createPanHandlers());\r\n    }\r\n    unmount() {\r\n        this.removePointerDownListener();\r\n        this.session && this.session.end();\r\n    }\r\n}\r\n\r\nexport { PanGesture };\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,gBAAgB,QAAQ,oCAAoC;AAErE,MAAMC,YAAY,GAAIC,OAAO,IAAK,CAACC,KAAK,EAAEC,IAAI,KAAK;EAC/C,IAAIF,OAAO,EAAE;IACTA,OAAO,CAACC,KAAK,EAAEC,IAAI,CAAC;EACxB;AACJ,CAAC;AACD,MAAMC,UAAU,SAASP,OAAO,CAAC;EAC7BQ,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,yBAAyB,GAAGT,IAAI;EACzC;EACAU,aAAaA,CAACC,gBAAgB,EAAE;IAC5B,IAAI,CAACC,OAAO,GAAG,IAAIf,UAAU,CAACc,gBAAgB,EAAE,IAAI,CAACE,iBAAiB,CAAC,CAAC,EAAE;MACtEC,kBAAkB,EAAE,IAAI,CAACC,IAAI,CAACC,qBAAqB,CAAC,CAAC;MACrDC,aAAa,EAAEhB,gBAAgB,CAAC,IAAI,CAACc,IAAI;IAC7C,CAAC,CAAC;EACN;EACAF,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAEK,iBAAiB;MAAEC,UAAU;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACN,IAAI,CAACO,QAAQ,CAAC,CAAC;IAC/E,OAAO;MACHC,cAAc,EAAErB,YAAY,CAACgB,iBAAiB,CAAC;MAC/CM,OAAO,EAAEtB,YAAY,CAACiB,UAAU,CAAC;MACjCM,MAAM,EAAEL,KAAK;MACbM,KAAK,EAAEA,CAACtB,KAAK,EAAEC,IAAI,KAAK;QACpB,OAAO,IAAI,CAACO,OAAO;QACnB,IAAIS,QAAQ,EACRA,QAAQ,CAACjB,KAAK,EAAEC,IAAI,CAAC;MAC7B;IACJ,CAAC;EACL;EACAsB,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAClB,yBAAyB,GAAGX,eAAe,CAAC,IAAI,CAACiB,IAAI,CAACa,OAAO,EAAE,aAAa,EAAGxB,KAAK,IAAK,IAAI,CAACM,aAAa,CAACN,KAAK,CAAC,CAAC;EAC5H;EACAyB,MAAMA,CAAA,EAAG;IACL,IAAI,CAACjB,OAAO,IAAI,IAAI,CAACA,OAAO,CAACkB,cAAc,CAAC,IAAI,CAACjB,iBAAiB,CAAC,CAAC,CAAC;EACzE;EACAkB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACtB,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACG,OAAO,IAAI,IAAI,CAACA,OAAO,CAACoB,GAAG,CAAC,CAAC;EACtC;AACJ;AAEA,SAAS1B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}